rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if request.auth.uid == user_id;
           allow read, create, update, delete: if request.auth != null;
    }
  }
}

// rules_version = '2';
// service cloud.firestore {
//   match /databases/{database}/documents {
//     match /users/{user_id}/{document=**} {
//       allow read, create: if request.auth != null;
//       allow read, create: if request.auth != null;
//       // allow update: if request.auth.uid == user_id;
//       // match /blogs/{blog_id} {

//       // }
//     }
//   }
// }


// users collection
// - authenticated user can read & create
// - only users who "own/created" a document can update it (online status) (user id's match)


// projects collection
// - any authenticated user can read, create, & update (comments) a document
// - only users who "own/created" a document can delete it

// wildcard = any in folder/databas - use {}
// user_id = id of document (also id of user who created document)
// request.auth -> if null means not logged in.